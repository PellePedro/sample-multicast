// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: halo.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UnaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UnaryRequest) Reset() {
	*x = UnaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnaryRequest) ProtoMessage() {}

func (x *UnaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnaryRequest.ProtoReflect.Descriptor instead.
func (*UnaryRequest) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{0}
}

func (x *UnaryRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UnaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UnaryResponse) Reset() {
	*x = UnaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnaryResponse) ProtoMessage() {}

func (x *UnaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnaryResponse.ProtoReflect.Descriptor instead.
func (*UnaryResponse) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{1}
}

func (x *UnaryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type LinkMetricsStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src        string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst        string `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Linkid     string `protobuf:"bytes,3,opt,name=linkid,proto3" json:"linkid,omitempty"`
	Throughput int32  `protobuf:"varint,4,opt,name=throughput,proto3" json:"throughput,omitempty"`
	Jitter     int32  `protobuf:"varint,5,opt,name=jitter,proto3" json:"jitter,omitempty"`
	Latency    int32  `protobuf:"varint,6,opt,name=latency,proto3" json:"latency,omitempty"`
}

func (x *LinkMetricsStream) Reset() {
	*x = LinkMetricsStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkMetricsStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkMetricsStream) ProtoMessage() {}

func (x *LinkMetricsStream) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkMetricsStream.ProtoReflect.Descriptor instead.
func (*LinkMetricsStream) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{3}
}

func (x *LinkMetricsStream) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *LinkMetricsStream) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *LinkMetricsStream) GetLinkid() string {
	if x != nil {
		return x.Linkid
	}
	return ""
}

func (x *LinkMetricsStream) GetThroughput() int32 {
	if x != nil {
		return x.Throughput
	}
	return 0
}

func (x *LinkMetricsStream) GetJitter() int32 {
	if x != nil {
		return x.Jitter
	}
	return 0
}

func (x *LinkMetricsStream) GetLatency() int32 {
	if x != nil {
		return x.Latency
	}
	return 0
}

type OptimalRoutesStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst     string `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Nexthop string `protobuf:"bytes,3,opt,name=nexthop,proto3" json:"nexthop,omitempty"`
}

func (x *OptimalRoutesStream) Reset() {
	*x = OptimalRoutesStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptimalRoutesStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimalRoutesStream) ProtoMessage() {}

func (x *OptimalRoutesStream) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimalRoutesStream.ProtoReflect.Descriptor instead.
func (*OptimalRoutesStream) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{4}
}

func (x *OptimalRoutesStream) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *OptimalRoutesStream) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *OptimalRoutesStream) GetNexthop() string {
	if x != nil {
		return x.Nexthop
	}
	return ""
}

type OptimalRouteStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst     string `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Metric1 int32  `protobuf:"varint,3,opt,name=metric1,proto3" json:"metric1,omitempty"`
	Metric2 int32  `protobuf:"varint,4,opt,name=metric2,proto3" json:"metric2,omitempty"`
	Metric3 int32  `protobuf:"varint,5,opt,name=metric3,proto3" json:"metric3,omitempty"`
}

func (x *OptimalRouteStreamResponse) Reset() {
	*x = OptimalRouteStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptimalRouteStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimalRouteStreamResponse) ProtoMessage() {}

func (x *OptimalRouteStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimalRouteStreamResponse.ProtoReflect.Descriptor instead.
func (*OptimalRouteStreamResponse) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{5}
}

func (x *OptimalRouteStreamResponse) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *OptimalRouteStreamResponse) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *OptimalRouteStreamResponse) GetMetric1() int32 {
	if x != nil {
		return x.Metric1
	}
	return 0
}

func (x *OptimalRouteStreamResponse) GetMetric2() int32 {
	if x != nil {
		return x.Metric2
	}
	return 0
}

func (x *OptimalRouteStreamResponse) GetMetric3() int32 {
	if x != nil {
		return x.Metric3
	}
	return 0
}

type BiDiStreamingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst     string `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Status1 int32  `protobuf:"varint,3,opt,name=status1,proto3" json:"status1,omitempty"`
	Status2 int32  `protobuf:"varint,4,opt,name=status2,proto3" json:"status2,omitempty"`
	Status3 int32  `protobuf:"varint,5,opt,name=status3,proto3" json:"status3,omitempty"`
}

func (x *BiDiStreamingRequest) Reset() {
	*x = BiDiStreamingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiDiStreamingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiDiStreamingRequest) ProtoMessage() {}

func (x *BiDiStreamingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiDiStreamingRequest.ProtoReflect.Descriptor instead.
func (*BiDiStreamingRequest) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{6}
}

func (x *BiDiStreamingRequest) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *BiDiStreamingRequest) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *BiDiStreamingRequest) GetStatus1() int32 {
	if x != nil {
		return x.Status1
	}
	return 0
}

func (x *BiDiStreamingRequest) GetStatus2() int32 {
	if x != nil {
		return x.Status2
	}
	return 0
}

func (x *BiDiStreamingRequest) GetStatus3() int32 {
	if x != nil {
		return x.Status3
	}
	return 0
}

type BiDiStreamingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst     string `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Metric1 int32  `protobuf:"varint,3,opt,name=metric1,proto3" json:"metric1,omitempty"`
	Metric2 int32  `protobuf:"varint,4,opt,name=metric2,proto3" json:"metric2,omitempty"`
	Metric3 int32  `protobuf:"varint,5,opt,name=metric3,proto3" json:"metric3,omitempty"`
}

func (x *BiDiStreamingResponse) Reset() {
	*x = BiDiStreamingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiDiStreamingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiDiStreamingResponse) ProtoMessage() {}

func (x *BiDiStreamingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiDiStreamingResponse.ProtoReflect.Descriptor instead.
func (*BiDiStreamingResponse) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{7}
}

func (x *BiDiStreamingResponse) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *BiDiStreamingResponse) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *BiDiStreamingResponse) GetMetric1() int32 {
	if x != nil {
		return x.Metric1
	}
	return 0
}

func (x *BiDiStreamingResponse) GetMetric2() int32 {
	if x != nil {
		return x.Metric2
	}
	return 0
}

func (x *BiDiStreamingResponse) GetMetric3() int32 {
	if x != nil {
		return x.Metric3
	}
	return 0
}

var File_halo_proto protoreflect.FileDescriptor

var file_halo_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x68, 0x61, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x66, 0x61,
	0x62, 0x72, 0x69, 0x63, 0x22, 0x28, 0x0a, 0x0c, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x27,
	0x0a, 0x0d, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2e, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x6e, 0x6b,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x72,
	0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6a, 0x69, 0x74, 0x74, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x53, 0x0a, 0x13, 0x4f,
	0x70, 0x74, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70,
	0x22, 0x8e, 0x01, 0x0a, 0x1a, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72,
	0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x31, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x31, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x33, 0x22, 0x88, 0x01, 0x0a, 0x14, 0x42, 0x69, 0x44, 0x69, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x33, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x33, 0x22, 0x89, 0x01, 0x0a,
	0x15, 0x42, 0x69, 0x44, 0x69, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x32, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x32, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x33, 0x32, 0xdb, 0x02, 0x0a, 0x19, 0x48, 0x6f, 0x70,
	0x62, 0x79, 0x48, 0x6f, 0x70, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x55, 0x6e,
	0x61, 0x72, 0x79, 0x12, 0x14, 0x2e, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x2e, 0x55, 0x6e, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66, 0x61, 0x62, 0x72,
	0x69, 0x63, 0x2e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x50, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54,
	0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x66, 0x61,
	0x62, 0x72, 0x69, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x5a, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4f,
	0x70, 0x74, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x66, 0x61,
	0x62, 0x72, 0x69, 0x63, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x22, 0x2e, 0x66, 0x61, 0x62, 0x72, 0x69,
	0x63, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x12, 0x54, 0x0a, 0x0f, 0x44, 0x6f, 0x42, 0x69, 0x44, 0x69, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x2e, 0x42, 0x69, 0x44,
	0x69, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x2e, 0x42, 0x69, 0x44, 0x69, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_halo_proto_rawDescOnce sync.Once
	file_halo_proto_rawDescData = file_halo_proto_rawDesc
)

func file_halo_proto_rawDescGZIP() []byte {
	file_halo_proto_rawDescOnce.Do(func() {
		file_halo_proto_rawDescData = protoimpl.X.CompressGZIP(file_halo_proto_rawDescData)
	})
	return file_halo_proto_rawDescData
}

var file_halo_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_halo_proto_goTypes = []interface{}{
	(*UnaryRequest)(nil),               // 0: fabric.UnaryRequest
	(*UnaryResponse)(nil),              // 1: fabric.UnaryResponse
	(*SubscribeRequest)(nil),           // 2: fabric.SubscribeRequest
	(*LinkMetricsStream)(nil),          // 3: fabric.LinkMetricsStream
	(*OptimalRoutesStream)(nil),        // 4: fabric.OptimalRoutesStream
	(*OptimalRouteStreamResponse)(nil), // 5: fabric.OptimalRouteStreamResponse
	(*BiDiStreamingRequest)(nil),       // 6: fabric.BiDiStreamingRequest
	(*BiDiStreamingResponse)(nil),      // 7: fabric.BiDiStreamingResponse
}
var file_halo_proto_depIdxs = []int32{
	0, // 0: fabric.HopbyHopAdaptiveOptimizer.ExecUnary:input_type -> fabric.UnaryRequest
	2, // 1: fabric.HopbyHopAdaptiveOptimizer.SubscribeToLinkStatus:input_type -> fabric.SubscribeRequest
	4, // 2: fabric.HopbyHopAdaptiveOptimizer.PublishOptimalRoute:input_type -> fabric.OptimalRoutesStream
	6, // 3: fabric.HopbyHopAdaptiveOptimizer.DoBiDiStreaming:input_type -> fabric.BiDiStreamingRequest
	1, // 4: fabric.HopbyHopAdaptiveOptimizer.ExecUnary:output_type -> fabric.UnaryResponse
	3, // 5: fabric.HopbyHopAdaptiveOptimizer.SubscribeToLinkStatus:output_type -> fabric.LinkMetricsStream
	5, // 6: fabric.HopbyHopAdaptiveOptimizer.PublishOptimalRoute:output_type -> fabric.OptimalRouteStreamResponse
	7, // 7: fabric.HopbyHopAdaptiveOptimizer.DoBiDiStreaming:output_type -> fabric.BiDiStreamingResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_halo_proto_init() }
func file_halo_proto_init() {
	if File_halo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_halo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkMetricsStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptimalRoutesStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptimalRouteStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiDiStreamingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiDiStreamingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_halo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_halo_proto_goTypes,
		DependencyIndexes: file_halo_proto_depIdxs,
		MessageInfos:      file_halo_proto_msgTypes,
	}.Build()
	File_halo_proto = out.File
	file_halo_proto_rawDesc = nil
	file_halo_proto_goTypes = nil
	file_halo_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HopbyHopAdaptiveOptimizerClient is the client API for HopbyHopAdaptiveOptimizer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HopbyHopAdaptiveOptimizerClient interface {
	ExecUnary(ctx context.Context, in *UnaryRequest, opts ...grpc.CallOption) (*UnaryResponse, error)
	SubscribeToLinkStatus(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (HopbyHopAdaptiveOptimizer_SubscribeToLinkStatusClient, error)
	PublishOptimalRoute(ctx context.Context, opts ...grpc.CallOption) (HopbyHopAdaptiveOptimizer_PublishOptimalRouteClient, error)
	DoBiDiStreaming(ctx context.Context, opts ...grpc.CallOption) (HopbyHopAdaptiveOptimizer_DoBiDiStreamingClient, error)
}

type hopbyHopAdaptiveOptimizerClient struct {
	cc grpc.ClientConnInterface
}

func NewHopbyHopAdaptiveOptimizerClient(cc grpc.ClientConnInterface) HopbyHopAdaptiveOptimizerClient {
	return &hopbyHopAdaptiveOptimizerClient{cc}
}

func (c *hopbyHopAdaptiveOptimizerClient) ExecUnary(ctx context.Context, in *UnaryRequest, opts ...grpc.CallOption) (*UnaryResponse, error) {
	out := new(UnaryResponse)
	err := c.cc.Invoke(ctx, "/fabric.HopbyHopAdaptiveOptimizer/ExecUnary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hopbyHopAdaptiveOptimizerClient) SubscribeToLinkStatus(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (HopbyHopAdaptiveOptimizer_SubscribeToLinkStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HopbyHopAdaptiveOptimizer_serviceDesc.Streams[0], "/fabric.HopbyHopAdaptiveOptimizer/SubscribeToLinkStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &hopbyHopAdaptiveOptimizerSubscribeToLinkStatusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HopbyHopAdaptiveOptimizer_SubscribeToLinkStatusClient interface {
	Recv() (*LinkMetricsStream, error)
	grpc.ClientStream
}

type hopbyHopAdaptiveOptimizerSubscribeToLinkStatusClient struct {
	grpc.ClientStream
}

func (x *hopbyHopAdaptiveOptimizerSubscribeToLinkStatusClient) Recv() (*LinkMetricsStream, error) {
	m := new(LinkMetricsStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hopbyHopAdaptiveOptimizerClient) PublishOptimalRoute(ctx context.Context, opts ...grpc.CallOption) (HopbyHopAdaptiveOptimizer_PublishOptimalRouteClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HopbyHopAdaptiveOptimizer_serviceDesc.Streams[1], "/fabric.HopbyHopAdaptiveOptimizer/PublishOptimalRoute", opts...)
	if err != nil {
		return nil, err
	}
	x := &hopbyHopAdaptiveOptimizerPublishOptimalRouteClient{stream}
	return x, nil
}

type HopbyHopAdaptiveOptimizer_PublishOptimalRouteClient interface {
	Send(*OptimalRoutesStream) error
	CloseAndRecv() (*OptimalRouteStreamResponse, error)
	grpc.ClientStream
}

type hopbyHopAdaptiveOptimizerPublishOptimalRouteClient struct {
	grpc.ClientStream
}

func (x *hopbyHopAdaptiveOptimizerPublishOptimalRouteClient) Send(m *OptimalRoutesStream) error {
	return x.ClientStream.SendMsg(m)
}

func (x *hopbyHopAdaptiveOptimizerPublishOptimalRouteClient) CloseAndRecv() (*OptimalRouteStreamResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(OptimalRouteStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hopbyHopAdaptiveOptimizerClient) DoBiDiStreaming(ctx context.Context, opts ...grpc.CallOption) (HopbyHopAdaptiveOptimizer_DoBiDiStreamingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HopbyHopAdaptiveOptimizer_serviceDesc.Streams[2], "/fabric.HopbyHopAdaptiveOptimizer/DoBiDiStreaming", opts...)
	if err != nil {
		return nil, err
	}
	x := &hopbyHopAdaptiveOptimizerDoBiDiStreamingClient{stream}
	return x, nil
}

type HopbyHopAdaptiveOptimizer_DoBiDiStreamingClient interface {
	Send(*BiDiStreamingRequest) error
	Recv() (*BiDiStreamingResponse, error)
	grpc.ClientStream
}

type hopbyHopAdaptiveOptimizerDoBiDiStreamingClient struct {
	grpc.ClientStream
}

func (x *hopbyHopAdaptiveOptimizerDoBiDiStreamingClient) Send(m *BiDiStreamingRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *hopbyHopAdaptiveOptimizerDoBiDiStreamingClient) Recv() (*BiDiStreamingResponse, error) {
	m := new(BiDiStreamingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// HopbyHopAdaptiveOptimizerServer is the server API for HopbyHopAdaptiveOptimizer service.
type HopbyHopAdaptiveOptimizerServer interface {
	ExecUnary(context.Context, *UnaryRequest) (*UnaryResponse, error)
	SubscribeToLinkStatus(*SubscribeRequest, HopbyHopAdaptiveOptimizer_SubscribeToLinkStatusServer) error
	PublishOptimalRoute(HopbyHopAdaptiveOptimizer_PublishOptimalRouteServer) error
	DoBiDiStreaming(HopbyHopAdaptiveOptimizer_DoBiDiStreamingServer) error
}

// UnimplementedHopbyHopAdaptiveOptimizerServer can be embedded to have forward compatible implementations.
type UnimplementedHopbyHopAdaptiveOptimizerServer struct {
}

func (*UnimplementedHopbyHopAdaptiveOptimizerServer) ExecUnary(context.Context, *UnaryRequest) (*UnaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecUnary not implemented")
}
func (*UnimplementedHopbyHopAdaptiveOptimizerServer) SubscribeToLinkStatus(*SubscribeRequest, HopbyHopAdaptiveOptimizer_SubscribeToLinkStatusServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeToLinkStatus not implemented")
}
func (*UnimplementedHopbyHopAdaptiveOptimizerServer) PublishOptimalRoute(HopbyHopAdaptiveOptimizer_PublishOptimalRouteServer) error {
	return status.Errorf(codes.Unimplemented, "method PublishOptimalRoute not implemented")
}
func (*UnimplementedHopbyHopAdaptiveOptimizerServer) DoBiDiStreaming(HopbyHopAdaptiveOptimizer_DoBiDiStreamingServer) error {
	return status.Errorf(codes.Unimplemented, "method DoBiDiStreaming not implemented")
}

func RegisterHopbyHopAdaptiveOptimizerServer(s *grpc.Server, srv HopbyHopAdaptiveOptimizerServer) {
	s.RegisterService(&_HopbyHopAdaptiveOptimizer_serviceDesc, srv)
}

func _HopbyHopAdaptiveOptimizer_ExecUnary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HopbyHopAdaptiveOptimizerServer).ExecUnary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fabric.HopbyHopAdaptiveOptimizer/ExecUnary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HopbyHopAdaptiveOptimizerServer).ExecUnary(ctx, req.(*UnaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HopbyHopAdaptiveOptimizer_SubscribeToLinkStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HopbyHopAdaptiveOptimizerServer).SubscribeToLinkStatus(m, &hopbyHopAdaptiveOptimizerSubscribeToLinkStatusServer{stream})
}

type HopbyHopAdaptiveOptimizer_SubscribeToLinkStatusServer interface {
	Send(*LinkMetricsStream) error
	grpc.ServerStream
}

type hopbyHopAdaptiveOptimizerSubscribeToLinkStatusServer struct {
	grpc.ServerStream
}

func (x *hopbyHopAdaptiveOptimizerSubscribeToLinkStatusServer) Send(m *LinkMetricsStream) error {
	return x.ServerStream.SendMsg(m)
}

func _HopbyHopAdaptiveOptimizer_PublishOptimalRoute_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HopbyHopAdaptiveOptimizerServer).PublishOptimalRoute(&hopbyHopAdaptiveOptimizerPublishOptimalRouteServer{stream})
}

type HopbyHopAdaptiveOptimizer_PublishOptimalRouteServer interface {
	SendAndClose(*OptimalRouteStreamResponse) error
	Recv() (*OptimalRoutesStream, error)
	grpc.ServerStream
}

type hopbyHopAdaptiveOptimizerPublishOptimalRouteServer struct {
	grpc.ServerStream
}

func (x *hopbyHopAdaptiveOptimizerPublishOptimalRouteServer) SendAndClose(m *OptimalRouteStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *hopbyHopAdaptiveOptimizerPublishOptimalRouteServer) Recv() (*OptimalRoutesStream, error) {
	m := new(OptimalRoutesStream)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _HopbyHopAdaptiveOptimizer_DoBiDiStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HopbyHopAdaptiveOptimizerServer).DoBiDiStreaming(&hopbyHopAdaptiveOptimizerDoBiDiStreamingServer{stream})
}

type HopbyHopAdaptiveOptimizer_DoBiDiStreamingServer interface {
	Send(*BiDiStreamingResponse) error
	Recv() (*BiDiStreamingRequest, error)
	grpc.ServerStream
}

type hopbyHopAdaptiveOptimizerDoBiDiStreamingServer struct {
	grpc.ServerStream
}

func (x *hopbyHopAdaptiveOptimizerDoBiDiStreamingServer) Send(m *BiDiStreamingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *hopbyHopAdaptiveOptimizerDoBiDiStreamingServer) Recv() (*BiDiStreamingRequest, error) {
	m := new(BiDiStreamingRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _HopbyHopAdaptiveOptimizer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fabric.HopbyHopAdaptiveOptimizer",
	HandlerType: (*HopbyHopAdaptiveOptimizerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecUnary",
			Handler:    _HopbyHopAdaptiveOptimizer_ExecUnary_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeToLinkStatus",
			Handler:       _HopbyHopAdaptiveOptimizer_SubscribeToLinkStatus_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "PublishOptimalRoute",
			Handler:       _HopbyHopAdaptiveOptimizer_PublishOptimalRoute_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DoBiDiStreaming",
			Handler:       _HopbyHopAdaptiveOptimizer_DoBiDiStreaming_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "halo.proto",
}
