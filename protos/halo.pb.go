// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: halo.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UnaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnaryRequest) Reset() {
	*x = UnaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnaryRequest) ProtoMessage() {}

func (x *UnaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnaryRequest.ProtoReflect.Descriptor instead.
func (*UnaryRequest) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{0}
}

type UnaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UnaryResponse) Reset() {
	*x = UnaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnaryResponse) ProtoMessage() {}

func (x *UnaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnaryResponse.ProtoReflect.Descriptor instead.
func (*UnaryResponse) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{1}
}

func (x *UnaryResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ServerStreamingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerStreamingRequest) Reset() {
	*x = ServerStreamingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerStreamingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStreamingRequest) ProtoMessage() {}

func (x *ServerStreamingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStreamingRequest.ProtoReflect.Descriptor instead.
func (*ServerStreamingRequest) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{2}
}

type ServerStreamingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst     string `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Metric1 int32  `protobuf:"varint,3,opt,name=metric1,proto3" json:"metric1,omitempty"`
	Metric2 int32  `protobuf:"varint,4,opt,name=metric2,proto3" json:"metric2,omitempty"`
	Metric3 int32  `protobuf:"varint,5,opt,name=metric3,proto3" json:"metric3,omitempty"`
}

func (x *ServerStreamingResponse) Reset() {
	*x = ServerStreamingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerStreamingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStreamingResponse) ProtoMessage() {}

func (x *ServerStreamingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStreamingResponse.ProtoReflect.Descriptor instead.
func (*ServerStreamingResponse) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{3}
}

func (x *ServerStreamingResponse) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *ServerStreamingResponse) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *ServerStreamingResponse) GetMetric1() int32 {
	if x != nil {
		return x.Metric1
	}
	return 0
}

func (x *ServerStreamingResponse) GetMetric2() int32 {
	if x != nil {
		return x.Metric2
	}
	return 0
}

func (x *ServerStreamingResponse) GetMetric3() int32 {
	if x != nil {
		return x.Metric3
	}
	return 0
}

type ClientStreamingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst     string `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Status1 int32  `protobuf:"varint,3,opt,name=status1,proto3" json:"status1,omitempty"`
	Status2 int32  `protobuf:"varint,4,opt,name=status2,proto3" json:"status2,omitempty"`
	Status3 int32  `protobuf:"varint,5,opt,name=status3,proto3" json:"status3,omitempty"`
}

func (x *ClientStreamingRequest) Reset() {
	*x = ClientStreamingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamingRequest) ProtoMessage() {}

func (x *ClientStreamingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamingRequest.ProtoReflect.Descriptor instead.
func (*ClientStreamingRequest) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{4}
}

func (x *ClientStreamingRequest) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *ClientStreamingRequest) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *ClientStreamingRequest) GetStatus1() int32 {
	if x != nil {
		return x.Status1
	}
	return 0
}

func (x *ClientStreamingRequest) GetStatus2() int32 {
	if x != nil {
		return x.Status2
	}
	return 0
}

func (x *ClientStreamingRequest) GetStatus3() int32 {
	if x != nil {
		return x.Status3
	}
	return 0
}

type ClientStreamingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst     string `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Metric1 int32  `protobuf:"varint,3,opt,name=metric1,proto3" json:"metric1,omitempty"`
	Metric2 int32  `protobuf:"varint,4,opt,name=metric2,proto3" json:"metric2,omitempty"`
	Metric3 int32  `protobuf:"varint,5,opt,name=metric3,proto3" json:"metric3,omitempty"`
}

func (x *ClientStreamingResponse) Reset() {
	*x = ClientStreamingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamingResponse) ProtoMessage() {}

func (x *ClientStreamingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamingResponse.ProtoReflect.Descriptor instead.
func (*ClientStreamingResponse) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{5}
}

func (x *ClientStreamingResponse) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *ClientStreamingResponse) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *ClientStreamingResponse) GetMetric1() int32 {
	if x != nil {
		return x.Metric1
	}
	return 0
}

func (x *ClientStreamingResponse) GetMetric2() int32 {
	if x != nil {
		return x.Metric2
	}
	return 0
}

func (x *ClientStreamingResponse) GetMetric3() int32 {
	if x != nil {
		return x.Metric3
	}
	return 0
}

type BiDiStreamingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst     string `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Status1 int32  `protobuf:"varint,3,opt,name=status1,proto3" json:"status1,omitempty"`
	Status2 int32  `protobuf:"varint,4,opt,name=status2,proto3" json:"status2,omitempty"`
	Status3 int32  `protobuf:"varint,5,opt,name=status3,proto3" json:"status3,omitempty"`
}

func (x *BiDiStreamingRequest) Reset() {
	*x = BiDiStreamingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiDiStreamingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiDiStreamingRequest) ProtoMessage() {}

func (x *BiDiStreamingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiDiStreamingRequest.ProtoReflect.Descriptor instead.
func (*BiDiStreamingRequest) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{6}
}

func (x *BiDiStreamingRequest) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *BiDiStreamingRequest) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *BiDiStreamingRequest) GetStatus1() int32 {
	if x != nil {
		return x.Status1
	}
	return 0
}

func (x *BiDiStreamingRequest) GetStatus2() int32 {
	if x != nil {
		return x.Status2
	}
	return 0
}

func (x *BiDiStreamingRequest) GetStatus3() int32 {
	if x != nil {
		return x.Status3
	}
	return 0
}

type BiDiStreamingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst     string `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Metric1 int32  `protobuf:"varint,3,opt,name=metric1,proto3" json:"metric1,omitempty"`
	Metric2 int32  `protobuf:"varint,4,opt,name=metric2,proto3" json:"metric2,omitempty"`
	Metric3 int32  `protobuf:"varint,5,opt,name=metric3,proto3" json:"metric3,omitempty"`
}

func (x *BiDiStreamingResponse) Reset() {
	*x = BiDiStreamingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiDiStreamingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiDiStreamingResponse) ProtoMessage() {}

func (x *BiDiStreamingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_halo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiDiStreamingResponse.ProtoReflect.Descriptor instead.
func (*BiDiStreamingResponse) Descriptor() ([]byte, []int) {
	return file_halo_proto_rawDescGZIP(), []int{7}
}

func (x *BiDiStreamingResponse) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *BiDiStreamingResponse) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *BiDiStreamingResponse) GetMetric1() int32 {
	if x != nil {
		return x.Metric1
	}
	return 0
}

func (x *BiDiStreamingResponse) GetMetric2() int32 {
	if x != nil {
		return x.Metric2
	}
	return 0
}

func (x *BiDiStreamingResponse) GetMetric3() int32 {
	if x != nil {
		return x.Metric3
	}
	return 0
}

var File_halo_proto protoreflect.FileDescriptor

var file_halo_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x68, 0x61, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x66, 0x61,
	0x62, 0x72, 0x69, 0x63, 0x22, 0x0e, 0x0a, 0x0c, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x27, 0x0a, 0x0d, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x18, 0x0a,
	0x16, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x31, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x32, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x33, 0x22, 0x8a, 0x01, 0x0a, 0x16, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x64, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x31, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x31, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x33, 0x22, 0x8b, 0x01, 0x0a, 0x17, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x31, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x31, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x33,
	0x22, 0x88, 0x01, 0x0a, 0x14, 0x42, 0x69, 0x44, 0x69, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x32, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x33, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x33, 0x22, 0x89, 0x01, 0x0a, 0x15,
	0x42, 0x69, 0x44, 0x69, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x32, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x32, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x33, 0x32, 0xd4, 0x02, 0x0a, 0x0e, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x44, 0x6f,
	0x55, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x14, 0x2e, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x2e, 0x55,
	0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66, 0x61,
	0x62, 0x72, 0x69, 0x63, 0x2e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x44, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x66, 0x61, 0x62, 0x72,
	0x69, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x66, 0x61, 0x62, 0x72,
	0x69, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x58,
	0x0a, 0x11, 0x44, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x54, 0x0a, 0x0f, 0x44, 0x6f, 0x42, 0x69,
	0x44, 0x69, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e, 0x66, 0x61,
	0x62, 0x72, 0x69, 0x63, 0x2e, 0x42, 0x69, 0x44, 0x69, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x61, 0x62, 0x72,
	0x69, 0x63, 0x2e, 0x42, 0x69, 0x44, 0x69, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_halo_proto_rawDescOnce sync.Once
	file_halo_proto_rawDescData = file_halo_proto_rawDesc
)

func file_halo_proto_rawDescGZIP() []byte {
	file_halo_proto_rawDescOnce.Do(func() {
		file_halo_proto_rawDescData = protoimpl.X.CompressGZIP(file_halo_proto_rawDescData)
	})
	return file_halo_proto_rawDescData
}

var file_halo_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_halo_proto_goTypes = []interface{}{
	(*UnaryRequest)(nil),            // 0: fabric.UnaryRequest
	(*UnaryResponse)(nil),           // 1: fabric.UnaryResponse
	(*ServerStreamingRequest)(nil),  // 2: fabric.ServerStreamingRequest
	(*ServerStreamingResponse)(nil), // 3: fabric.ServerStreamingResponse
	(*ClientStreamingRequest)(nil),  // 4: fabric.ClientStreamingRequest
	(*ClientStreamingResponse)(nil), // 5: fabric.ClientStreamingResponse
	(*BiDiStreamingRequest)(nil),    // 6: fabric.BiDiStreamingRequest
	(*BiDiStreamingResponse)(nil),   // 7: fabric.BiDiStreamingResponse
}
var file_halo_proto_depIdxs = []int32{
	0, // 0: fabric.RoutingService.DoUnary:input_type -> fabric.UnaryRequest
	2, // 1: fabric.RoutingService.DoServerStreaming:input_type -> fabric.ServerStreamingRequest
	4, // 2: fabric.RoutingService.DoClientStreaming:input_type -> fabric.ClientStreamingRequest
	6, // 3: fabric.RoutingService.DoBiDiStreaming:input_type -> fabric.BiDiStreamingRequest
	1, // 4: fabric.RoutingService.DoUnary:output_type -> fabric.UnaryResponse
	3, // 5: fabric.RoutingService.DoServerStreaming:output_type -> fabric.ServerStreamingResponse
	5, // 6: fabric.RoutingService.DoClientStreaming:output_type -> fabric.ClientStreamingResponse
	7, // 7: fabric.RoutingService.DoBiDiStreaming:output_type -> fabric.BiDiStreamingResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_halo_proto_init() }
func file_halo_proto_init() {
	if File_halo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_halo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerStreamingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerStreamingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientStreamingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientStreamingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiDiStreamingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiDiStreamingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_halo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_halo_proto_goTypes,
		DependencyIndexes: file_halo_proto_depIdxs,
		MessageInfos:      file_halo_proto_msgTypes,
	}.Build()
	File_halo_proto = out.File
	file_halo_proto_rawDesc = nil
	file_halo_proto_goTypes = nil
	file_halo_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RoutingServiceClient is the client API for RoutingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoutingServiceClient interface {
	// Unary
	DoUnary(ctx context.Context, in *UnaryRequest, opts ...grpc.CallOption) (*UnaryResponse, error)
	// Server Streaming
	DoServerStreaming(ctx context.Context, in *ServerStreamingRequest, opts ...grpc.CallOption) (RoutingService_DoServerStreamingClient, error)
	// Client Streaming
	DoClientStreaming(ctx context.Context, opts ...grpc.CallOption) (RoutingService_DoClientStreamingClient, error)
	// BiDi Streaming
	DoBiDiStreaming(ctx context.Context, opts ...grpc.CallOption) (RoutingService_DoBiDiStreamingClient, error)
}

type routingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRoutingServiceClient(cc grpc.ClientConnInterface) RoutingServiceClient {
	return &routingServiceClient{cc}
}

func (c *routingServiceClient) DoUnary(ctx context.Context, in *UnaryRequest, opts ...grpc.CallOption) (*UnaryResponse, error) {
	out := new(UnaryResponse)
	err := c.cc.Invoke(ctx, "/fabric.RoutingService/DoUnary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routingServiceClient) DoServerStreaming(ctx context.Context, in *ServerStreamingRequest, opts ...grpc.CallOption) (RoutingService_DoServerStreamingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RoutingService_serviceDesc.Streams[0], "/fabric.RoutingService/DoServerStreaming", opts...)
	if err != nil {
		return nil, err
	}
	x := &routingServiceDoServerStreamingClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RoutingService_DoServerStreamingClient interface {
	Recv() (*ServerStreamingResponse, error)
	grpc.ClientStream
}

type routingServiceDoServerStreamingClient struct {
	grpc.ClientStream
}

func (x *routingServiceDoServerStreamingClient) Recv() (*ServerStreamingResponse, error) {
	m := new(ServerStreamingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *routingServiceClient) DoClientStreaming(ctx context.Context, opts ...grpc.CallOption) (RoutingService_DoClientStreamingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RoutingService_serviceDesc.Streams[1], "/fabric.RoutingService/DoClientStreaming", opts...)
	if err != nil {
		return nil, err
	}
	x := &routingServiceDoClientStreamingClient{stream}
	return x, nil
}

type RoutingService_DoClientStreamingClient interface {
	Send(*ClientStreamingRequest) error
	CloseAndRecv() (*ClientStreamingResponse, error)
	grpc.ClientStream
}

type routingServiceDoClientStreamingClient struct {
	grpc.ClientStream
}

func (x *routingServiceDoClientStreamingClient) Send(m *ClientStreamingRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *routingServiceDoClientStreamingClient) CloseAndRecv() (*ClientStreamingResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ClientStreamingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *routingServiceClient) DoBiDiStreaming(ctx context.Context, opts ...grpc.CallOption) (RoutingService_DoBiDiStreamingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RoutingService_serviceDesc.Streams[2], "/fabric.RoutingService/DoBiDiStreaming", opts...)
	if err != nil {
		return nil, err
	}
	x := &routingServiceDoBiDiStreamingClient{stream}
	return x, nil
}

type RoutingService_DoBiDiStreamingClient interface {
	Send(*BiDiStreamingRequest) error
	Recv() (*BiDiStreamingResponse, error)
	grpc.ClientStream
}

type routingServiceDoBiDiStreamingClient struct {
	grpc.ClientStream
}

func (x *routingServiceDoBiDiStreamingClient) Send(m *BiDiStreamingRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *routingServiceDoBiDiStreamingClient) Recv() (*BiDiStreamingResponse, error) {
	m := new(BiDiStreamingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RoutingServiceServer is the server API for RoutingService service.
type RoutingServiceServer interface {
	// Unary
	DoUnary(context.Context, *UnaryRequest) (*UnaryResponse, error)
	// Server Streaming
	DoServerStreaming(*ServerStreamingRequest, RoutingService_DoServerStreamingServer) error
	// Client Streaming
	DoClientStreaming(RoutingService_DoClientStreamingServer) error
	// BiDi Streaming
	DoBiDiStreaming(RoutingService_DoBiDiStreamingServer) error
}

// UnimplementedRoutingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRoutingServiceServer struct {
}

func (*UnimplementedRoutingServiceServer) DoUnary(context.Context, *UnaryRequest) (*UnaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoUnary not implemented")
}
func (*UnimplementedRoutingServiceServer) DoServerStreaming(*ServerStreamingRequest, RoutingService_DoServerStreamingServer) error {
	return status.Errorf(codes.Unimplemented, "method DoServerStreaming not implemented")
}
func (*UnimplementedRoutingServiceServer) DoClientStreaming(RoutingService_DoClientStreamingServer) error {
	return status.Errorf(codes.Unimplemented, "method DoClientStreaming not implemented")
}
func (*UnimplementedRoutingServiceServer) DoBiDiStreaming(RoutingService_DoBiDiStreamingServer) error {
	return status.Errorf(codes.Unimplemented, "method DoBiDiStreaming not implemented")
}

func RegisterRoutingServiceServer(s *grpc.Server, srv RoutingServiceServer) {
	s.RegisterService(&_RoutingService_serviceDesc, srv)
}

func _RoutingService_DoUnary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingServiceServer).DoUnary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fabric.RoutingService/DoUnary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingServiceServer).DoUnary(ctx, req.(*UnaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoutingService_DoServerStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ServerStreamingRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RoutingServiceServer).DoServerStreaming(m, &routingServiceDoServerStreamingServer{stream})
}

type RoutingService_DoServerStreamingServer interface {
	Send(*ServerStreamingResponse) error
	grpc.ServerStream
}

type routingServiceDoServerStreamingServer struct {
	grpc.ServerStream
}

func (x *routingServiceDoServerStreamingServer) Send(m *ServerStreamingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RoutingService_DoClientStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RoutingServiceServer).DoClientStreaming(&routingServiceDoClientStreamingServer{stream})
}

type RoutingService_DoClientStreamingServer interface {
	SendAndClose(*ClientStreamingResponse) error
	Recv() (*ClientStreamingRequest, error)
	grpc.ServerStream
}

type routingServiceDoClientStreamingServer struct {
	grpc.ServerStream
}

func (x *routingServiceDoClientStreamingServer) SendAndClose(m *ClientStreamingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *routingServiceDoClientStreamingServer) Recv() (*ClientStreamingRequest, error) {
	m := new(ClientStreamingRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RoutingService_DoBiDiStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RoutingServiceServer).DoBiDiStreaming(&routingServiceDoBiDiStreamingServer{stream})
}

type RoutingService_DoBiDiStreamingServer interface {
	Send(*BiDiStreamingResponse) error
	Recv() (*BiDiStreamingRequest, error)
	grpc.ServerStream
}

type routingServiceDoBiDiStreamingServer struct {
	grpc.ServerStream
}

func (x *routingServiceDoBiDiStreamingServer) Send(m *BiDiStreamingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *routingServiceDoBiDiStreamingServer) Recv() (*BiDiStreamingRequest, error) {
	m := new(BiDiStreamingRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RoutingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fabric.RoutingService",
	HandlerType: (*RoutingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoUnary",
			Handler:    _RoutingService_DoUnary_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DoServerStreaming",
			Handler:       _RoutingService_DoServerStreaming_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DoClientStreaming",
			Handler:       _RoutingService_DoClientStreaming_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DoBiDiStreaming",
			Handler:       _RoutingService_DoBiDiStreaming_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "halo.proto",
}
