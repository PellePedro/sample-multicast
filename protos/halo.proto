syntax = "proto3";

package fabric;
option go_package = "./protos";

message UnaryRequest {
  string message = 1;
}
message UnaryResponse {
  string status = 1;
}

message SubscribeRequest {
  string clientId = 1;
}

message LinkMetricsStream {
  string src = 1;
  string dst = 2;
  string  linkid = 3;
  int32  throughput = 4;
  int32  jitter = 5;
  int32  latency = 6;
}

message OptimalRoutesStream {
  string src = 1;
  string dst = 2;
  string nexthop = 3;
}
message OptimalRouteStreamResponse {
  string src = 1;
  string dst = 2;
  int32  metric1 = 3;
  int32  metric2 = 4;
  int32  metric3 = 5;
}

message BiDiStreamingRequest {
  string src = 1;
  string dst = 2;
  int32  status1 = 3;
  int32  status2 = 4;
  int32  status3 = 5;
}
message BiDiStreamingResponse {
  string src = 1;
  string dst = 2;
  int32  metric1 = 3;
  int32  metric2 = 4;
  int32  metric3 = 5;
}

service HopbyHopAdaptiveOptimizer{
    rpc ExecUnary(UnaryRequest) returns (UnaryResponse) {};
    rpc SubscribeToLinkStatus(SubscribeRequest) returns (stream LinkMetricsStream) {};
    rpc PublishOptimalRoute(stream OptimalRoutesStream) returns (OptimalRouteStreamResponse) {};
    rpc DoBiDiStreaming(stream BiDiStreamingRequest) returns (stream BiDiStreamingResponse) {};
}
